{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP i5\\\\Desktop\\\\react project\\\\ProjetTest\\\\src\\\\Routes.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AuthContext } from \"./AuthProvider\";\nimport { AuthStack } from \"./AuthStack\";\nimport { AppStack } from \"./AppStack\";\nimport * as SecureStore from 'expo-secure-store';\nexport default function Routes() {\n  var _this = this;\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser,\n      login = _useContext.login,\n      logout = _useContext.logout;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    SecureStore.getItemAsync('user').then(function (userString) {\n      if (userString) {\n        _this.login();\n      }\n\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, user ? React.createElement(AppStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }) : React.createElement(AuthStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 30\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/HP i5/Desktop/react project/ProjetTest/src/Routes.js"],"names":["React","useState","useEffect","useContext","NavigationContainer","AuthContext","AuthStack","AppStack","SecureStore","Routes","user","setUser","login","logout","loading","setLoading","getItemAsync","then","userString","catch","err","console","log","flex","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,WAAT;AACA,SAASC,SAAT;AACA,SAASC,QAAT;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAAA,oBACUN,UAAU,CAACE,WAAD,CADpB;AAAA,MACvBK,IADuB,eACvBA,IADuB;AAAA,MACjBC,OADiB,eACjBA,OADiB;AAAA,MACRC,KADQ,eACRA,KADQ;AAAA,MACDC,MADC,eACDA,MADC;;AAAA,kBAEDZ,QAAQ,CAAC,IAAD,CAFP;AAAA;AAAA,MAExBa,OAFwB;AAAA,MAEfC,UAFe;;AAI/Bb,EAAAA,SAAS,CAAC,YAAM;AAEdM,IAAAA,WAAW,CAACQ,YAAZ,CAAyB,MAAzB,EACGC,IADH,CACQ,UAAAC,UAAU,EAAI;AAClB,UAAIA,UAAJ,EAAgB;AAEd,QAAA,KAAI,CAACN,KAAL;AAGD;;AACDG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KATH,EAUGI,KAVH,CAUS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAZH;AAaD,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAIN,OAAJ,EAAa;AACX,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAES,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,UAAU,EAAE,QAAvB;AAAiCC,QAAAA,cAAc,EAAE;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,IAAI,GAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzB,CADF;AAKD","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { StyleSheet, Text, View, Button, TextInput, ActivityIndicator, AsyncStorage } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { AuthContext } from './AuthProvider';\nimport { AuthStack } from './AuthStack';\nimport { AppStack } from './AppStack';\nimport * as SecureStore from 'expo-secure-store';\n\nexport default function Routes() {\n  const { user, setUser, login, logout } = useContext(AuthContext)\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // check if the user is logged in or not\n    SecureStore.getItemAsync('user')\n      .then(userString => {\n        if (userString) {\n          // decode it\n          this.login();\n          //userObject = JSON.parse(userString)\n          //setUser(userObject);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }, []);\n\n  if (loading) {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    )\n  }\n\n  return (\n    <NavigationContainer>\n      {user ? <AppStack /> : <AuthStack />}\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}